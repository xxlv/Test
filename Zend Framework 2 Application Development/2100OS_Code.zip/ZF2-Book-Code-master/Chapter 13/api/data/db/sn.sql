# ************************************************************
# Sequel Pro SQL dump
# Version 4096
#
# http://www.sequelpro.com/
# http://code.google.com/p/sequel-pro/
#
# Host: 192.168.56.2 (MySQL 5.5.31-0ubuntu0.12.04.1-log)
# Database: sn
# Generation Time: 2013-06-01 22:37:06 +0000
# ************************************************************


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


# Dump of table oauth_access_tokens
# ------------------------------------------------------------

DROP TABLE IF EXISTS `oauth_access_tokens`;

CREATE TABLE `oauth_access_tokens` (
  `access_token` text,
  `client_id` text,
  `user_id` text,
  `expires` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `scope` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;



# Dump of table oauth_authorization_codes
# ------------------------------------------------------------

DROP TABLE IF EXISTS `oauth_authorization_codes`;

CREATE TABLE `oauth_authorization_codes` (
  `authorization_code` text,
  `client_id` text,
  `user_id` text,
  `redirect_uri` text,
  `expires` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `scope` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;



# Dump of table oauth_clients
# ------------------------------------------------------------

DROP TABLE IF EXISTS `oauth_clients`;

CREATE TABLE `oauth_clients` (
  `client_id` text,
  `client_secret` text,
  `redirect_uri` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `oauth_clients` WRITE;
/*!40000 ALTER TABLE `oauth_clients` DISABLE KEYS */;

INSERT INTO `oauth_clients` (`client_id`, `client_secret`, `redirect_uri`)
VALUES
	('zf2-client','mysupersecretpass','http://example.com');

/*!40000 ALTER TABLE `oauth_clients` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table oauth_refresh_tokens
# ------------------------------------------------------------

DROP TABLE IF EXISTS `oauth_refresh_tokens`;

CREATE TABLE `oauth_refresh_tokens` (
  `refresh_token` text,
  `client_id` text,
  `user_id` text,
  `expires` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `scope` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8;



# Dump of table user_comments
# ------------------------------------------------------------

DROP TABLE IF EXISTS `user_comments`;

CREATE TABLE `user_comments` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned DEFAULT NULL,
  `type` tinyint(1) unsigned DEFAULT NULL,
  `entry_id` int(11) unsigned DEFAULT NULL,
  `comment` varchar(255) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_user_id` (`user_id`),
  KEY `idx_entry_id` (`entry_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `user_comments` WRITE;
/*!40000 ALTER TABLE `user_comments` DISABLE KEYS */;

INSERT INTO `user_comments` (`id`, `user_id`, `type`, `entry_id`, `comment`, `created_at`, `updated_at`)
VALUES
	(1,1,3,1,'Comment 1','2013-04-27 20:54:02',NULL);

/*!40000 ALTER TABLE `user_comments` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table user_feed_articles
# ------------------------------------------------------------

DROP TABLE IF EXISTS `user_feed_articles`;

CREATE TABLE `user_feed_articles` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `feed_id` int(11) unsigned DEFAULT NULL,
  `title` varchar(512) DEFAULT NULL,
  `content` text,
  `url` varchar(2048) DEFAULT NULL,
  `author` varchar(255) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_feed_id` (`feed_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `user_feed_articles` WRITE;
/*!40000 ALTER TABLE `user_feed_articles` DISABLE KEYS */;

INSERT INTO `user_feed_articles` (`id`, `feed_id`, `title`, `content`, `url`, `author`, `created_at`, `updated_at`)
VALUES
	(1,1,'10 awesome PHP functions and snippets','<h2>Sanitize database inputs</h2>\n<p>When inserting data in your database, you have to be really careful about SQL injections and other attempts to insert malicious data into the db. The function below is probably the most complete and efficient way to sanitize a string before using it with your database.</p>\n<pre>\nfunction cleanInput($input) {\n\n  $search = array(\n    &#39;@&lt;script[^&gt;]*?&gt;.*?&lt;/script&gt;@si&#39;,   // Strip out javascript\n    &#39;@&lt;[\\/\\!]*?[^&lt;&gt;]*?&gt;@si&#39;,            // Strip out HTML tags\n    &#39;@&lt;style[^&gt;]*?&gt;.*?&lt;/style&gt;@siU&#39;,    // Strip style tags properly\n    &#39;@&lt;![\\s\\S]*?--[ \\t\\n\\r]*&gt;@&#39;         // Strip multi-line comments\n  );\n\n    $output = preg_replace($search, &#39;&#39;, $input);\n    return $output;\n  }\n?&gt;\n&lt;?php\nfunction sanitize($input) {\n    if (is_array($input)) {\n        foreach($input as $var=&gt;$val) {\n            $output[$var] = sanitize($val);\n        }\n    }\n    else {\n        if (get_magic_quotes_gpc()) {\n            $input = stripslashes($input);\n        }\n        $input  = cleanInput($input);\n        $output = mysql_real_escape_string($input);\n    }\n    return $output;\n}\n</pre>\n<p>Here&#8217;s some examples of use:</p>\n<pre>\n&lt;?php\n  $bad_string = &quot;Hi! &lt;script src=&#39;http://www.evilsite.com/bad_script.js&#39;&gt;&lt;/script&gt; It&#39;s a good day!&quot;;\n  $good_string = sanitize($bad_string);\n  // $good_string returns &quot;Hi! It\\&#39;s a good day!&quot;\n\n  // Also use for getting POST/GET variables\n  $_POST = sanitize($_POST);\n  $_GET  = sanitize($_GET);\n?&gt;\n</pre>\n<p><strong>Source: <a href=\"http://css-tricks.com/snippets/php/sanitize-database-inputs/\">http://css-tricks.com/snippets/php/sanitize-database-inputs/</a></strong></p>\n<h2>Calculate distance between two points</h2>\n<p>Want to be able to calculate the distance between two points? The function below use the latitude and longitude of two locations, and calculate the distance between them in both miles and metric units.</p>\n<pre>\nfunction getDistanceBetweenPointsNew($latitude1, $longitude1, $latitude2, $longitude2) {\n    $theta = $longitude1 - $longitude2;\n    $miles = (sin(deg2rad($latitude1)) * sin(deg2rad($latitude2))) + (cos(deg2rad($latitude1)) * cos(deg2rad($latitude2)) * cos(deg2rad($theta)));\n    $miles = acos($miles);\n    $miles = rad2deg($miles);\n    $miles = $miles * 60 * 1.1515;\n    $feet = $miles * 5280;\n    $yards = $feet / 3;\n    $kilometers = $miles * 1.609344;\n    $meters = $kilometers * 1000;\n    return compact(&#39;miles&#39;,&#39;feet&#39;,&#39;yards&#39;,&#39;kilometers&#39;,&#39;meters&#39;); \n}\n</pre>\n<p>Example:</p>\n<pre>\n$point1 = array(&#39;lat&#39; =&gt; 40.770623, &#39;long&#39; =&gt; -73.964367);\n$point2 = array(&#39;lat&#39; =&gt; 40.758224, &#39;long&#39; =&gt; -73.917404);\n$distance = getDistanceBetweenPointsNew($point1[&#39;lat&#39;], $point1[&#39;long&#39;], $point2[&#39;lat&#39;], $point2[&#39;long&#39;]);\nforeach ($distance as $unit =&gt; $value) {\n    echo $unit.&#39;: &#39;.number_format($value,4).&#39;&lt;br /&gt;&#39;;\n}\n</pre>\n<p><strong>Source: <a href=\"http://www.inkplant.com/code/calculate-the-distance-between-two-points.php\">http://www.inkplant.com/code/calculate-the-distance-between-two-points.php</a></strong></p>\n<h2>Get all tweets of a specific hashtag</h2>\n<p>Here&#8217;s a quick and easy way to get all tweets of a specific usage using the useful cURL library. The following example will retrieve all tweets with the <em>#cat</em> hashtag.</p>\n<pre>\nfunction getTweets($hash_tag) {\n\n    $url = &#39;http://search.twitter.com/search.atom?q=&#39;.urlencode($hash_tag) ;\n    echo &quot;&lt;p&gt;Connecting to &lt;strong&gt;$url&lt;/strong&gt; ...&lt;/p&gt;&quot;;\n    $ch = curl_init($url);\n    curl_setopt ($ch, CURLOPT_RETURNTRANSFER, TRUE);\n    $xml = curl_exec ($ch);\n    curl_close ($ch);\n\n    //If you want to see the response from Twitter, uncomment this next part out:\n    //echo &quot;&lt;p&gt;Response:&lt;/p&gt;&quot;;\n    //echo &quot;&lt;pre&gt;&quot;.htmlspecialchars($xml).&quot;&lt;/pre&gt;&quot;;\n\n    $affected = 0;\n    $twelement = new SimpleXMLElement($xml);\n    foreach ($twelement-&gt;entry as $entry) {\n        $text = trim($entry-&gt;title);\n        $author = trim($entry-&gt;author-&gt;name);\n        $time = strtotime($entry-&gt;published);\n        $id = $entry-&gt;id;\n        echo &quot;&lt;p&gt;Tweet from &quot;.$author.&quot;: &lt;strong&gt;&quot;.$text.&quot;&lt;/strong&gt;  &lt;em&gt;Posted &quot;.date(&#39;n/j/y g:i a&#39;,$time).&quot;&lt;/em&gt;&lt;/p&gt;&quot;;\n    }\n\n    return true ;\n}\n\ngetTweets(&#39;#cats&#39;);\n</pre>\n<p><strong>Source: <a href=\"http://www.inkplant.com/code/get-twitter-posts-by-hashtag.php\">http://www.inkplant.com/code/get-twitter-posts-by-hashtag.php</a></strong></p>\n<h2>Applying Even/Odd Classes</h2>\n<p>When generating lists or tables using php, it is super useful to apply even/odd classes to each row of data in order to simplify CSS styling.</p>\n<p>Used inside a loop, class names would be named <code>.example-class0</code> and <code>.example-class1</code> alternating. Increasing the &#8220;2&#8243; number allows you to increment in thirds or fourths or whatever you need:</p>\n<pre>\n&lt;div class=&quot;example-class&lt;?php echo ($xyz++%2); ?&gt;&quot;&gt;\n</pre>\n<p><strong>Source: <a href=\"http://css-tricks.com/snippets/php/applying-evenodd-classes/\">http://css-tricks.com/snippets/php/applying-evenodd-classes/</a></strong></p>\n<h2>Email error logs to yourself</h2>\n<p>Instead of publicly displaying possible errors on your website, why not using a custom error handler to email error logs to yourself? Here&#8217;s a handy code snippet to do it.</p>\n<pre>\n&lt;?php\n\n// Our custom error handler\nfunction nettuts_error_handler($number, $message, $file, $line, $vars){\n	$email = &quot;\n		&lt;p&gt;An error ($number) occurred on line \n		&lt;strong&gt;$line&lt;/strong&gt; and in the &lt;strong&gt;file: $file.&lt;/strong&gt; \n		&lt;p&gt; $message &lt;/p&gt;&quot;;\n		\n	$email .= &quot;&lt;pre&gt;&quot; . print_r($vars, 1) . &quot;&lt;/pre&gt;&quot;;\n	\n	$headers = &#39;Content-type: text/html; charset=iso-8859-1&#39; . &quot;\\r\\n&quot;;\n	\n	// Email the error to someone...\n	error_log($email, 1, &#39;you@youremail.com&#39;, $headers);\n\n	// Make sure that you decide how to respond to errors (on the user&#39;s side)\n	// Either echo an error message, or kill the entire project. Up to you...\n	// The code below ensures that we only &quot;die&quot; if the error was more than\n	// just a NOTICE. \n	if ( ($number !== E_NOTICE) &amp;&amp; ($number &lt; 2048) ) {\n		die(&quot;There was an error. Please try again later.&quot;);\n	}\n}\n\n// We should use our custom function to handle errors.\nset_error_handler(&#39;nettuts_error_handler&#39;);\n\n// Trigger an error... (var doesn&#39;t exist)\necho $somevarthatdoesnotexist;\n\n</pre>\n<p><strong>Source: <a href=\"http://net.tutsplus.com/tutorials/php/quick-tip-email-error-logs-to-yourself-with-php/\">http://net.tutsplus.com/tutorials/php/quick-tip-email-error-logs-to-yourself-with-php/</a></strong></p>\n<h2>Automatically creates variables with the same name as the key in the POST array</h2>\n<p>This snippet is very helpful for every POST processing. All you need is an array with expected keys in the POST array. This snippet automatically creates variables with the same name as the key in the POST array. If the key is not found in the POST array the variable is set to NULL. Basically you dont need to write:</p>\n<pre>$username=$_POST[\"username\"];\n$age=$_POST[\"age\"];\netc.</pre>\n<p>This snippet will do this boring part of every PHP code with POST handling so you can fully focus on a validation of the input, because that is much more important.</p>\n<pre>&lt;?php\n$expected=array(\'username\',\'age\',\'city\',\'street\');\nforeach($expected as $key){\n    if(!empty($_POST[$key])){\n        ${key}=$_POST[$key];\n    }\n    else{\n        ${key}=NULL;\n    }\n}\n?&gt;</pre>\n<p><strong>Source: <a href=\"http://www.catswhocode.com/blog/snippets/automatically-creates-variables-with-the-same-name-as-the-key-in-the-post-array\">http://www.catswhocode.com/blog/snippets/automatically-creates-variables&#8230;</a></strong></p>\n<h2>Download &#038; save a remote image on your server using PHP</h2>\n<p>Here&#8217;s a super easy and efficient way to download a remote image and save it on your own server. </p>\n<pre>\n$image = file_get_contents(&#39;http://www.url.com/image.jpg&#39;);\nfile_put_contents(&#39;/images/image.jpg&#39;, $image); //save the image on your server\n</pre>\n<p><strong>Source: <a href=\"http://www.catswhocode.com/blog/snippets/download-save-a-remote-image-on-your-server-using-php\">http://www.catswhocode.com/blog/snippets/download-save-a-remote-image&#8230;</a></strong></p>\n<h2>Create data uri&#8217;s</h2>\n<p>Data uri&#8217;s can be useful for embedding images into HTML/CSS/JS to save on HTTP requests, at the cost of maintainability. You can use online tools to create data uri&#8217;s, or you can use the simple PHP function below:</p>\n<pre>\nfunction data_uri($file, $mime) {\n  $contents=file_get_contents($file);\n  $base64=base64_encode($contents);\n  echo &quot;data:$mime;base64,$base64&quot;;\n}\n</pre>\n<p><strong>Source: <a href=\"http://css-tricks.com/snippets/php/create-data-uris/\">http://css-tricks.com/snippets/php/create-data-uris/</a></strong></p>\n<h2>Detect browser language</h2>\n<p>When developing a multilingual website, I really like to retrieve the browser language and use this language as the default language for my website. Here&#8217;s how I get the language used by the client browser: </p>\n<pre>\nfunction get_client_language($availableLanguages, $default=&#39;en&#39;){\n	if (isset($_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;])) {\n		$langs=explode(&#39;,&#39;,$_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;]);\n\n		foreach ($langs as $value){\n			$choice=substr($value,0,2);\n			if(in_array($choice, $availableLanguages)){\n				return $choice;\n			}\n		}\n	} \n	return $default;\n}\n</pre>\n<p><strong>Source: <a href=\"http://snipplr.com/view/12631/detect-browser-language/php-detect-browser-language\">http://snipplr.com/view/12631/detect-browser-language/php-detect-browser-language</a></strong></p>\n<h2>Add (th, st, nd, rd, th) to the end of a number</h2>\n<p>This simple and easy function will take a number and add &#8220;th, st, nd, rd, th&#8221; after it. Very useful!</p>\n<pre>\nfunction ordinal($cdnl){ \n    $test_c = abs($cdnl) % 10; \n    $ext = ((abs($cdnl) %100 &lt; 21 &amp;&amp; abs($cdnl) %100 &gt; 4) ? &#39;th&#39; \n            : (($test_c &lt; 4) ? ($test_c &lt; 3) ? ($test_c &lt; 2) ? ($test_c &lt; 1) \n            ? &#39;th&#39; : &#39;st&#39; : &#39;nd&#39; : &#39;rd&#39; : &#39;th&#39;)); \n    return $cdnl.$ext; \n}  \nfor($i=1;$i&lt;100;$i++){ \n    echo ordinal($i).&#39;&lt;br&gt;&#39;; \n} \n</pre>\n<p><strong>Source: <a href=\"http://phpsnips.com/snip-37\">http://phpsnips.com/snip-37</a></strong></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/XhDvmEWySMw\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/10-awesome-php-functions-and-snippets','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(2,1,'CSS and JavaScript tools to take your website to the next level','<h2>Topcoat</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/topcoat.png\" alt=\"\" /><br />\nTopcoat is a very neat and clean library of CSS classes specialized in form elements: buttons, checkboxes, sliders, etc. A super easy way to make your website or app look good in minutes.</p>\n<p><strong>Demo/Download: <a href=\"http://topcoat.io/\">http://topcoat.io/</a></strong></p>\n<h2>Countable.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/countable.png\" alt=\"\" /><br />\nAs you can guess, countable.js is a JavaScript function to add live paragraph, word and character counting to any HTML element. It is very small and do not rely on any JS framework.</p>\n<p><strong>Demo/Download: <a href=\"http://radlikewhoa.github.io/Countable/\">http://radlikewhoa.github.io/Countable/</a></strong></p>\n<h2>iCheck</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/icheck.png\" alt=\"\" /><br />\nWant super-looking checkboxes and radio buttons for your new web app? Then try iCheck, a jQuery plugin which allow you to easily customize radio buttons and checkboxes. iCheck is easy to use and comes with various skins and color schemes.</p>\n<p><strong>Demo/Download: <a href=\"http://damirfoy.com/iCheck/\">http://damirfoy.com/iCheck/</a></strong></p>\n<h2>CSS only responsive navigation </h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/navigation.png\" alt=\"\" /><br />\nResponsive layouts are very popular on the web right now, and this is definitely a good thing in my opinion. Here is a downloadable and reusable responsive navigation menu, made in CSS only.</p>\n<p><strong>Demo/Download: <a href=\"http://valdelama.com/css-responsive-navigation\">http://valdelama.com/css-responsive-navigation</a></strong></p>\n<h2>Almost Flat UI </h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/flat.png\" alt=\"\" /><br />\nBased on Foundation Framework, Almost Flat UI is a complete HTML/CSS/JS framework to build your site on. It looks really clean and professional. Definitely worth a try!</p>\n<p><strong>Demo/Download: <a href=\"http://websymphony.net/almost-flat-ui/\">http://websymphony.net/almost-flat-ui/</a></strong></p>\n<h2>Chart.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/chart.png\" alt=\"\" /><br />\nChart.js is a dependency free, lightweight and object-oriented tool to create client side graphs. It features 6 different chart types and is very easy to use.</p>\n<p><strong>Demo/Download: <a href=\"http://www.chartjs.org/\">http://www.chartjs.org/</a></strong></p>\n<h2>PlaceIMG</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/placeimg.png\" alt=\"\" /><br />\nWhen building websites or apps, you often need placeholder images. This very handy service generates random images at the requested size. Super useful! </p>\n<p><strong>Demo/Download: <a href=\"http://placeimg.com/\">http://placeimg.com/</a></strong></p>\n<h2>jQuery PanZoom</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/panzoom.png\" alt=\"\" /><br />\njQuery Panzoom is a progressive plugin to create panning and zooming functionality for an element. Panzoom supports the same browsers as jQuery 2.0 and can be used with jQuery 1.9.0+ or jQuery 2.0+.</p>\n<p><strong>Demo/Download: <a href=\"https://github.com/timmywil/jquery.panzoom/\">https://github.com/timmywil/jquery.panzoom/</a></strong></p>\n<h2>Perfect Scrollbar</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/scrollbar.png\" alt=\"\" /><br />\nIf you want to be able to create perfect looking scrollbars, then you should definitely have a look to this tiny jQuery plugin. It helps you to create customized scrollbars with no css change on any original element.</p>\n<p><strong>Demo/Download: <a href=\"http://noraesae.github.io/perfect-scrollbar/\">http://noraesae.github.io/perfect-scrollbar/</a></strong></p>\n<h2>FitVids.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/fitvids.png\" alt=\"\" /><br />\nA lightweight, easy-to-use jQuery plugin for fluid width video embeds. It was built by was built by Chris Coyier and Paravel.</p>\n<p><strong>Demo/Download: <a href=\"http://fitvidsjs.com/\">http://fitvidsjs.com/</a></strong></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/gHVXK7U-pZY\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/css-and-javascript-tools-to-take-your-website-to-the-next-level','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(3,1,'Useful snippets to protect your WordPress blog against scrapers','<h2>Force your WordPress blog to break out of frames</h2>\n<p>Some scrapers display your blog in a frame to keep advantage of your content, and show their ads in another frame in order to try to make a few bucks. This code will force your blog to break out of the frames, so the visitor will only see your blog, not the scraper site.</p>\n<p>Just paste the code below into your <code>functions.php</code> file, save it, and you&#8217;re done.</p>\n<pre>\n// Break Out of Frames for WordPress\nfunction break_out_of_frames() {\n	if (!is_preview()) {\n		echo &quot;\\n&lt;script type=\\&quot;text/javascript\\&quot;&gt;&quot;;\n		echo &quot;\\n&lt;!--&quot;;\n		echo &quot;\\nif (parent.frames.length &gt; 0) { parent.location.href = location.href; }&quot;;\n		echo &quot;\\n--&gt;&quot;;\n		echo &quot;\\n&lt;/script&gt;\\n\\n&quot;;\n	}\n}\nadd_action(&#39;wp_head&#39;, &#39;break_out_of_frames&#39;);\n</pre>\n<p><strong>Source: <a href=\"http://wp-mix.com/break-out-of-frames-wordpress/\">http://wp-mix.com/break-out-of-frames-wordpress/</a></strong></p>\n<h2>Protect your blog against image hotlinking</h2>\n<p>Most scrapers simply use your RSS feed and display it on their site, which means that they also use your original images on their sites, and consume your server bandwidth for their own websites. So you can definitely use this to inform the reader that he&#8217;s reading an article stolen from another blog.</p>\n<p>Let&#8217;s create a small image saying something like &#8220;This article has been stolen from www.yoursite.com&#8221;. and upload it on your blog server. Then, edit your <code>.htaccess</code> file, (located in your WordPress blog root directory) and append this code to it:</p>\n<pre>\nRewriteEngine On\n#Replace ?mysite\\.com/ with your blog url\nRewriteCond %{HTTP_REFERER} !^http://(.+\\.)?mysite\\.com/ [NC]\nRewriteCond %{HTTP_REFERER} !^$\n#Replace /images/nohotlink.jpg with your \"don\'t hotlink\" image url\nRewriteRule .*\\.(jpe?g|gif|bmp|png)$ /images/nohotlink.jpg [L]\n</pre>\n<p>Here is a funny example of this technique in action:</p>\n<p style=\"text-align:center\">\n<img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/04/hotlinking-fail.jpg\" alt=\"\" />\n</p>\n<p><strong>Source: <a href=\"http://www.wprecipes.com/how-to-protect-your-wordpress-blog-from-hotlinking\">http://www.wprecipes.com/how-to-protect-your-wordpress-blog-from-hotlinking</a></strong></p>\n<h2>Automatically add a link to your post title</h2>\n<p>As the majority of content thieves are using automatic scraping tools, they&#8217;ll scrap all of your content, including the post title. A good way to discourage scrapers is to automatically put a link on your post titles, so each stolen post will automatically link to your original post.</p>\n<p>To do so in WordPress, simply open your <code>single.php</code> file and locate where the title is displayed. Then, replace the code by the following:</p>\n<pre>\n&lt;h1&gt;\n  &lt;a href=&quot;&lt;?php the_permalink(); ?&gt;&quot;&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;\n&lt;/h1&gt;\n</pre>\n<p><strong>Source: <a href=\"http://www.catswhoblog.com/how-to-protect-your-blog-from-content-thieves\">http://www.catswhoblog.com/how-to-protect-your-blog-from-content-thieves</a></strong></p>\n<h2>Automatically add a link to your original posts using RSS feed</h2>\n<p>Another useful way to fight back against content theft is to automatically insert a copyright notice with a backlink to the original post on each RSS item. That way, scrapers who use your RSS feed to publish your content on their own sites automatically will also publish your copyright notice and backlink!</p>\n<p>Simply add the code below to your <code>functions.php</code> file. Copyright notice can be customized on line 4.</p>\n<pre>\n// add custom feed content\nfunction add_feed_content($content) {\n	if(is_feed()) {\n		$content .= &#39;&lt;p&gt;This article is copyright &amp;copy; &#39;.date(&#39;Y&#39;).&#39;&amp;nbsp;&#39;.bloginfo(&#39;name&#39;).&#39;&lt;/p&gt;&#39;;\n	}\n	return $content;\n}\nadd_filter(&#39;the_excerpt_rss&#39;, &#39;add_feed_content&#39;);\nadd_filter(&#39;the_content&#39;, &#39;add_feed_content&#39;);\n</pre>\n<p><strong>Source: <a href=\"http://digwp.com/2012/10/customizing-wordpress-feeds/\">http://digwp.com/2012/10/customizing-wordpress-feeds/</a></strong></p>\n<h2>Create a custom RSS feed</h2>\n<p>While the technique above is good, it only display a small notice at the bottom of your posts. You might want a more in-depth solution, which allow you to limit the number of characters appearing in each RSS feed item.</p>\n<p>Here is a ready to use WordPress page template that you can easily customize to fit your specific needs. </p>\n<pre>\n&lt;?php\n/*\nTemplate Name: Custom Feed\n*/\n\n$numposts = 5;\n\nfunction yoast_rss_date( $timestamp = null ) {\n  $timestamp = ($timestamp==null) ? time() : $timestamp;\n  echo date(DATE_RSS, $timestamp);\n}\n\nfunction yoast_rss_text_limit($string, $length, $replacer = &#39;...&#39;) { \n  $string = strip_tags($string);\n  if(strlen($string) &gt; $length) \n    return (preg_match(&#39;/^(.*)\\W.*$/&#39;, substr($string, 0, $length+1), $matches) ? $matches[1] : substr($string, 0, $length)) . $replacer;   \n  return $string; \n}\n\n$posts = query_posts(&#39;showposts=&#39;.$numposts);\n\n$lastpost = $numposts - 1;\n\nheader(&quot;Content-Type: application/rss+xml; charset=UTF-8&quot;);\necho &#39;&lt;?xml version=&quot;1.0&quot;?&gt;&#39;;\n?&gt;&lt;rss version=&quot;2.0&quot;&gt;\n&lt;channel&gt;\n  &lt;title&gt;Yoast E-mail Update&lt;/title&gt;\n  &lt;link&gt;http://yoast.com/&lt;/link&gt;\n  &lt;description&gt;The latest blog posts from Yoast.com.&lt;/description&gt;\n  &lt;language&gt;en-us&lt;/language&gt;\n  &lt;pubDate&gt;&lt;?php yoast_rss_date( strtotime($ps[$lastpost]-&gt;post_date_gmt) ); ?&gt;&lt;/pubDate&gt;\n  &lt;lastBuildDate&gt;&lt;?php yoast_rss_date( strtotime($ps[$lastpost]-&gt;post_date_gmt) ); ?&gt;&lt;/lastBuildDate&gt;\n  &lt;managingEditor&gt;joost@yoast.com&lt;/managingEditor&gt;\n&lt;?php foreach ($posts as $post) { ?&gt;\n  &lt;item&gt;\n    &lt;title&gt;&lt;?php echo get_the_title($post-&gt;ID); ?&gt;&lt;/title&gt;\n    &lt;link&gt;&lt;?php echo get_permalink($post-&gt;ID); ?&gt;&lt;/link&gt;\n    &lt;description&gt;&lt;?php echo &#39;&lt;![CDATA[&#39;.yoast_rss_text_limit($post-&gt;post_content, 500).&#39;&lt;br/&gt;&lt;br/&gt;Keep on reading: &lt;a href=&quot;&#39;.get_permalink($post-&gt;ID).&#39;&quot;&gt;&#39;.get_the_title($post-&gt;ID).&#39;&lt;/a&gt;&#39;.&#39;]]&gt;&#39;;  ?&gt;&lt;/description&gt;\n    &lt;pubDate&gt;&lt;?php yoast_rss_date( strtotime($post-&gt;post_date_gmt) ); ?&gt;&lt;/pubDate&gt;\n    &lt;guid&gt;&lt;?php echo get_permalink($post-&gt;ID); ?&gt;&lt;/guid&gt;\n  &lt;/item&gt;\n&lt;?php } ?&gt;\n&lt;/channel&gt;\n&lt;/rss&gt;\n</pre>\n<p><strong>Source: <a href=\"http://yoast.com/custom-rss-feeds-wordpress/\">http://yoast.com/custom-rss-feeds-wordpress/</a></strong></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/5HuJFbecGQY\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/useful-snippets-to-protect-your-wordpress-blog-against-scrapers','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(4,1,'Hacks and snippets to enhance WordPress search engine','<h2>Redirect to first post if only one post is found</h2>\n<p>Let&#8217;s start with a handy snippet that will automatically redirect the reader to the post if only one post is found. Simply paste it in your <code>functions.php</code> file and you&#8217;re done. </p>\n<pre>\nadd_action(&#39;template_redirect&#39;, &#39;redirect_single_post&#39;);\nfunction redirect_single_post() {\n    if (is_search()) {\n        global $wp_query;\n        if ($wp_query-&gt;post_count == 1) {\n            wp_redirect( get_permalink( $wp_query-&gt;posts[&#39;0&#39;]-&gt;ID ) );\n        }\n    }\n}\n</pre>\n<p><strong>Source: <a href=\"http://www.paulund.co.uk/redirect-search-results-return-one-post\">http://www.paulund.co.uk/redirect-search-results&#8230;</a></strong></p>\n<h2>Display the number of results in WordPress search</h2>\n<p>When a search is done on your blog, WordPress does not return the number of results found. Though, this can be useful for the person who made the search.</p>\n<p>In order to display the number of results, open your <code>search.php</code> file. In it, search for the following:</p>\n<pre>\n&lt;h2 class=\"pagetitle\">Search Results&lt;/h2>\n</pre>\n<p>Now replace it with:</p>\n<pre>\n&lt;h2 class=\"pagetitle\">Search Results for &lt;?php \n/* Search Count */ \n$allsearch = &#038;new WP_Query(\"s=$s&#038;showposts=-1\"); \n$key = wp_specialchars($s, 1); \n$count = $allsearch-&gt;post_count; _e(\'\'); \n_e(\'&lt;span class=\"search-terms\"&gt;\'); \necho $key; _e(\'&lt;/span&gt;\'); _e(\' &mdash; \'); \necho $count . \' \'; _e(\'articles\'); \n\nwp_reset_query(); ?&gt;&lt;/h2>\n</pre>\n<p><strong>Source: <a href=\"http://www.problogdesign.com/wordpress/3-codes-for-a-far-better-wordpress-search-page/\">http://www.problogdesign.com/wordpress/3-codes-for-a-far-better&#8230;</a></strong></p>\n<h2>Enlight searched text in search results</h2>\n<p>Here is an easy way to make your search results more user-friendly: Enlight searched text.<br />\nTo do so, open your <code>search.php</code> file and find the <code>the_title()</code> function. Replace it with:</p>\n<pre>echo $title;</pre>\n<p>Now, just before the line you just modified, add this code:</p>\n<pre>&lt;?php\n	$title 	= get_the_title();\n	$keys= explode(\" \",$s);\n	$title 	= preg_replace(\'/(\'.implode(\'|\', $keys) .\')/iu\',\n		\'&lt;strong class=\"search-excerpt\"&gt;\\0&lt;/strong&gt;\',\n		$title);\n?&gt;</pre>\n<p>Save the <code>search.php</code> file and open <code>style.css</code>. Append the following line to it:</p>\n<pre>\nstrong.search-excerpt { background: yellow; }\n</pre>\n<p>That&#8217;s all. Better, isn&#8217;t it?</p>\n<p><strong>Source: <a href=\"http://yoast.com/wordpress-search/\">http://yoast.com/wordpress-search/</a></strong></p>\n<h2>Limit posts per page on search</h2>\n<p>By default, WordPress outputs 10 posts per page on the search results page. If you need to change this number, just paste the following code in your <code>functions.php</code> file. Replace the number on line 3 by the desired number of posts to be displayed.</p>\n<pre>\nfunction limit_posts_per_search_page() {\n	if ( is_search() )\n		set_query_var(&#39;posts_per_archive_page&#39;, 20); \n}\n\nadd_filter(&#39;pre_get_posts&#39;, &#39;limit_posts_per_search_page&#39;);\n</pre>\n<p><strong>Source: <a href=\"http://wordpress.org/support/topic/limit-post-per-search-page\">http://wordpress.org/support/topic/limit-post-per-search-page</a></strong></p>\n<h2>Search within post type only</h2>\n<p>If you want to force the search engine to search only within a specific post type, here is the solution. Paste the code below into your <code>functions.php</code> file after you changed the post type name on line 4.</p>\n<pre>\nfunction SearchFilter($query) {\n  if ($query-&gt;is_search) {\n    // Insert the specific post type you want to search\n    $query-&gt;set(&#39;post_type&#39;, &#39;feeds&#39;);\n  }\n  return $query;\n}\n \n// This filter will jump into the loop and arrange our results before they&#39;re returned\nadd_filter(&#39;pre_get_posts&#39;,&#39;SearchFilter&#39;);\n</pre>\n<p><strong>Source: <a href=\"http://www.hongkiat.com/blog/wordpress-search-plugin-snippet/\">http://www.hongkiat.com/blog/wordpress-search-plugin-snippet/</a></strong></p>\n<h2>Limit search to specific categories</h2>\n<p>Is it also possible to limit search to specific categories. To do so, just replace the categories IDs on line 3 and paste the following code on your <code>search.php</code> template:</p>\n<pre>\n&lt;?php if( is_search() )  :\n$paged = (get_query_var(\'paged\')) ? get_query_var(\'paged\') : 1;\nquery_posts(\"s=$s&#038;paged=$paged&#038;cat=1,2,3\");\nendif; ?&gt;\n</pre>\n<p><strong>Source: <a href=\"http://www.wprecipes.com/how-to-limit-search-to-specific-categories\">http://www.wprecipes.com/how-to-limit-search-to-specific-categories</a></strong></p>\n<h2>Completely shut down WordPress search</h2>\n<p>Although search is a really useful feature on most websites, sometimes you simply don&#8217;t need it at all. Did you knew that you could completely shut down WordPress search? Just include the function below in your <code>functions.php</code> file.</p>\n<pre>\nfunction fb_filter_query( $query, $error = true ) {\n    if ( is_search() ) {\n        $query-&gt;is_search = false;\n        $query-&gt;query_vars[s] = false;\n        $query-&gt;query[s] = false;\n \n        // to error\n        if ( $error == true )\n            $query-&gt;is_404 = true;\n    }\n}\n \nadd_action( &#39;parse_query&#39;, &#39;fb_filter_query&#39; );\nadd_filter( &#39;get_search_form&#39;, create_function( &#39;$a&#39;, &quot;return null;&quot; ) );\n</pre>\n<p><strong>Source: <a href=\"http://wpengineer.com/1042/disable-wordpress-search/\">http://wpengineer.com/1042/disable-wordpress-search/</a></strong></p>\n<h2>Make your search results unlimited</h2>\n<p>As I already stated before, the fact that WordPress displays 10 posts by default on the search results page can be annoying. If you&#8217;d like to display unlimited search results on the same page, here&#8217;s an easy way to do it.</p>\n<p>In <code>search.php</code>, find the code below:</p>\n<pre>\n&lt;?php if (have_posts()) : ?&gt;\n&lt;?php while (have_posts()) : the_post(); ?&gt;\n</pre>\n<p>Once you found it, replace it by this:</p>\n<pre>\n&lt;?php $posts=query_posts($query_string . &#39;&amp;posts_per_page=-1&#39;); ?&gt;\n&lt;?php if (have_posts()) : ?&gt;\n&lt;?php while (have_posts()) : the_post(); ?&gt;\n</pre>\n<p>That&#8217;s all. You&#8217;re done!<br />\n<strong>Source: <a href=\"http://wphacks.com/how-to-make-wordpress-search-results-unlimited/\">http://wphacks.com/how-to-make-wordpress-search-results-unlimited/</a></strong></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/jRafimgm00I\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/hacks-and-snippets-to-enhance-wordpress-search-engine','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(5,1,'Cross browser compatible HTML5 videos','<h2>Step 1: Preparing files</h2>\n<p>The first thing to do is to make sure your files are in the right format for HTML5 video playing. Right now, there&#8217;s no standard format so you&#8217;ll have to have multiple versions of the same file in order to serve the right format to the client browser. This is indeed the biggest problem with HTML5 videos right now.</p>\n<p>You&#8217;ll need the 3 following formats: The first is <code>.mp4</code> (or .<code>m4v</code>) which is used on Apple products such as iPads, Safari, etc. The second format needed is <code>.ogv</code>, an open-source format used by Firefox. And the last one is <code>.webm</code>.</p>\n<p>Converting your file into those formats is pretty easy if you use this very handy tool named <a href=\"http://video.online-convert.com/\">Video Converter</a>. You have nothing to install on your computer, simply upload your video, choose the desired output format, and you&#8217;re done!</p>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/online-convert.png\" alt=\"\" /></p>\n<p>Now that you have your video in the required formats, let&#8217;s start coding. You&#8217;ll see, it&#8217;s very easy.</p>\n<h2>Step 2: Coding the player</h2>\n<p>Below is the basic code for displaying a HTML5 video on a web page. Please note that in order to have the video properly displayed on iPad, you must start with the <code>.mp4</code> video in the src list.</p>\n<p>On line 5, I have added a download link for older browser who don&#8217;t recognize the <code>&lt;video&gt;</code> tag.</p>\n<pre>\n&lt;video width=&quot;800&quot; height=&quot;374&quot;&gt;\n	&lt;source src=&quot;my_video.mp4&quot; type=&quot;video/mp4&quot; /&gt;\n	&lt;source src=&quot;my_video.ogv&quot; type=&quot;video/ogg&quot; /&gt;\n	&lt;source src=&quot;my_video.webm&quot; type=&quot;video/webm&quot; /&gt;\n	Video tag not supported. Download the video &lt;a href=\"video.webm\"&#038;gthere&lt;/a&#038;gt.\n&lt;/video&gt;\n</pre>\n<p>A very important thing to remember is to make sure your server is serving video files with the correct MIME type in the <code>Content-Type</code> header. To make sure it will, open your site .htaccess file (don&#8217;t forget to do a backup before any modification) and add the lines below:</p>\n<pre>\nAddType video/ogg .ogv\nAddType video/mp4 .mp4\nAddType video/webm .webm\n</pre>\n<p>Also, various attributes can be used with the <code>&lt;video&gt;</code> element, for example to autoplay the video, loop it, or automatically display some controls. For the full reference, please see the <a href=\"http://www.w3.org/wiki/HTML/Elements/video\">w3 site</a>. </p>\n<h2>Step 3: Creating a fallback for older browsers</h2>\n<p>Now, you have a super cool HTML5 video player. But the problem is that some older browsers don&#8217;t support any HTML video at all. For those browsers, the only solution is to use a Flash fallback.</p>\n<p>As the purpose of this tutorial is not to show how to built a Flash video player, I&#8217;m assuming that you have your video in the <code>.flv</code> format (named <em>video.flv</em> below) as well as a flash <code>.flv</code> player (named <em>fallback.swf</em>).</p>\n<p>As you can see below, I have added my <code>&lt;object&gt;</code> tag inside the <code>&lt;video&gt;</code> tag. That&#8217;s simple as that! </p>\n<pre>\n&lt;video width=&quot;800&quot; height=&quot;374&quot;&gt;\n	&lt;source src=&quot;my_video.mp4&quot; type=&quot;video/mp4&quot; /&gt;\n	&lt;source src=&quot;my_video.ogv&quot; type=&quot;video/ogg&quot; /&gt;\n\n	&lt;object width=&quot;800&quot; height=&quot;374&quot; type=&quot;application/x-shockwave-flash&quot; data=&quot;fallback.swf&quot;&gt;\n		&lt;param name=&quot;movie&quot; value=&quot;fallback.swf&quot; /&gt;\n		&lt;param name=&quot;flashvars&quot; value=&quot;autostart=true&amp;amp;file=video.flv&quot; /&gt;\n	&lt;/object&gt;\n\n&lt;/video&gt; \n</pre>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/EhvkLe8Y3Ow\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/cross-browser-compatible-html5-videos','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(6,1,'Super useful jQuery plugins for responsive web design','<h2>SlabText.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2012/08/slabtext.png\" alt=\"\" /><br />\nSlabText is a jQuery plugin that splits headlines into rows before resizing each row to fill the available horizontal space. Basically, it means that your headline will always look great whatever of the client screen size.<br />\n<strong>Download: <a href=\"http://www.frequency-decoder.com/2012/01/08/slabtext-a-jquery-plugin-for-producing-big-bold-responsive-headlines\">http://www.frequency-decoder.com/2012/01/08/slabtext-a-jquery-plugin&#8230;</a></strong></p>\n<h2>jQuery Masonry</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/masonry.png\" alt=\"\" /><br />\nMasonry is a dynamic grid layout plugin for jQuery. Think of it as the flip-side of CSS floats. Whereas floating arranges elements horizontally then vertically, Masonry arranges elements vertically, positioning each element in the next open spot in the grid.<br />\n<strong>Download: <a href=\"http://masonry.desandro.com/\">http://masonry.desandro.com/</a></strong></p>\n<h2>TinyNav.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/tinynav.png\" alt=\"\" /><br />\nTinyNav.js is a super useful jQuery plugin which allows you to automatically turn a navigation menu into a <code>select</code> for small devices such as iPhones. A must have!<br />\n<strong>Download: <a href=\"http://tinynav.viljamis.com/\">http://tinynav.viljamis.com/</a></strong></p>\n<h2>FitText.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2011/06/fittext.png\" alt=\"\" /><br />\nFitText is a simple jQuery plugin that automatically make a text fit the width of its parent element. Perfect for awesome, responsive headlines!<br />\n<strong>Download: <a href=\"http://fittextjs.com/\">http://fittextjs.com/</a></strong></p>\n<h2>Breakpoints.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/breakpoints.png\" alt=\"\" /><br />\nSimply define breakpoints for your responsive design, and Breakpoints.js will fire custom events when the browser enters and/or exits that breakpoint. Very useful on complicated layouts!<br />\n<strong>Download: <a href=\"http://xoxco.com/projects/code/breakpoints/\">http://xoxco.com/projects/code/breakpoints/</a></strong></p>\n<h2>ResponsiveSlides.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/slides.png\" alt=\"\" /><br />\nSlideshows are very popular among the web. Though, forcing them to fit any screen size can be a little tricky. ResponsiveSlides.js allow you to create responsive slideshows, which will look great whatever on any device.<br />\n<strong>Download: <a href=\"http://responsive-slides.viljamis.com/\">http://responsive-slides.viljamis.com/</a></strong></p>\n<h2>Flare</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/flare.png\" alt=\"\" /><br />\nFlare is another jQuery plugin for building responsive and full width slideshows. It is not free but it is absolutely worth $10 as it is very easy to use and visually pleasant.<br />\n<strong>Download: <a href=\"http://is.gd/flarecwc\">http://is.gd/flarecwc</a></strong></p>\n<h2>FitVids.js</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/fitvids.png\" alt=\"\" /><br />\nA lightweight, easy-to-use jQuery plugin for fluid width video embeds. It was built by was built by Chris Coyier and Paravel.<br />\n<strong>Download: <a href=\"http://fitvidsjs.com/\">http://fitvidsjs.com/</a></strong></p>\n<h2>Responsive tables</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/responsive-tables.png\" alt=\"\" /><br />\nDoes your tables break your responsive layout? If yes, here is a simple JS/CSS combo that will let your tables adapt to small device screens without everything going to hell. A must have for any tables!<br />\n<strong>Download: <a href=\"http://www.zurb.com/playground/responsive-tables\">http://www.zurb.com/playground/responsive-tables</a></strong></p>\n<h2>jq-idealforms</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/idealforms.png\" alt=\"\" /><br />\nIdeal Forms is the ultimate framework for building and validating responsive HTML5 forms. It is super easy to use.<br />\n<strong>Download: <a href=\"http://elclanrs.github.com/jq-idealforms/\">http://elclanrs.github.com/jq-idealforms/</a></strong></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/JW4jpx_oVWQ\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/super-useful-jquery-plugins-for-responsive-web-design','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(7,1,'Ultimate list of WordPress resources','<h2>Starter kits, blank files and generators</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/underscores.png\" alt=\"\" /><br />\nWhen developing a WordPress theme, widget or plugin, the best way to start is by using a &#8220;blank&#8221; template file so you&#8217;ll save time and you&#8217;ll start on solid foundations. Here are my favorites:</p>\n<ul>\n<li><a href=\"http://www.underscores.me\">Underscores.me</a>: in my humble opinion, the best way to start coding a new WordPress theme. Simply fill the options and you&#8217;ll get offered to download a rock solid blank WordPress theme template.</li>\n<li><a href=\"https://github.com/ajaypatelaj/WordPress-Widget-Starter\">WP Widget Starter file</a>: a blank template for developing WordPress widgets.</li>\n<li><a href=\"http://pluginstarter.com\">Plugin Starter</a>: a base class that is easily extended to make plugin development better, faster and stronger.</li>\n<li><a href=\"https://github.com/aut0poietic/wp-starter-kit\">WP Starter Kit</a>: a development template for rapidly building WordPress plugins.</li>\n<li><a href=\"http://cdharrison.com/2008/12/03/threaded-comments\">Threaded comments</a>: Basic CSS styles for threaded comments. Always a good start when it comes to styling comments!</li>\n</ul>\n<h2>WordPress Hosting</h2>\n<p><a href=\"http://is.gd/wpwebhostcwc\"><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/wpwebhost.png\" alt=\"\" /></a><br />\nBasically, it is pretty easy to find a suitable webhost to host a WordPress site or blog. Though, I do recommend the following hosts for the good results I had with them since years:</p>\n<ul>\n<li><a href=\"http://is.gd/vidahostcwc\">Vidahost</a>: CatsWhoCode webhost. Super fast, reliable, no down time and a super friendly and reactive support. It&#8217;s not cheap at all, but definitely the best option if your site is receiving a lot of traffic, or if you&#8217;re looking to host multiple sites on a single server.</li>\n<li><a href=\"http://is.gd/wpwebhostcwc\">WP Web Host</a>: The webhost I recommend for people looking for an affordable and easy way to host a WordPress based website or blog. Friendly support with strong WordPress knowledge. Good service for small/medium sites.</li>\n</ul>\n<p>On the other hand, I do not recommend Maven Hosting and PHPNet as I had bad results with both of them. I never hosted any of my websites on Bluehost, but I worked with a client who did and I didn&#8217;t found the performances good.</p>\n<h2>Free themes</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/themelab.png\" alt=\"\" /><br />\nThere&#8217;s literally thousands of WordPress themes that you can download and use freely on your blog. But let me be honest, most of them are ugly. Though, you can still find great theme that you can use for free. My personal list of favorite places to get quality free themes:</p>\n<ul>\n<li><a href=\"http://wordpress.org/extend/themes/\">WordPress.org Themes</a>: The official repository for WordPress themes. Most are old and/or ugly, but there&#8217;s lots of beautiful, well coded free themes.</li>\n<li><a href=\"http://wp.smashingmagazine.com/tag/themes/\">Smashing Magazine</a>: The popular design blog offers very cool free themes from time to time.</li>\n<li><a href=\"http://www.blogohblog.com/category/wordpress-themes\">Blog Oh Blog Themes</a>: Quality themes, clean code.</li>\n<li><a href=\"http://www.themelab.com/free-wordpress-themes/\">ThemeLab</a>: Lots of beautiful free themes.</li>\n<li><a href=\"http://www.skinpress.com/\">SkinPress</a>: A few cool themes to download and use freely.</li>\n</ul>\n<p>Want even more free themes? 1st Web Designer compiled <a href=\"http://www.1stwebdesigner.com/wordpress/sites-find-free-wordpress-themes-daily/\">this list</a> of 20 places to get free themes.</p>\n<p>Also, note that several premium theme sellers distribute free themes from time to time. Please check out the list below for more info.</p>\n<h2>Premium themes</h2>\n<p><a href=\"http://is.gd/themeforestcwc\"><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/themeforest.png\" alt=\"\" /></a><br />\nAlthough you can find good looking themes for free, lots of quality themes requires you to pay for it. A big pro of premium themes is that authors offer support, so you&#8217;ll have someone to help if needed.</p>\n<ul>\n<li><a href=\"http://is.gd/themeforestcwc\">Themeforest</a>: Probably my favorite place to get quality themes for a cheap price. Hundreds of themes to choose from. Most themes have a clean code; however code quality may vary from a theme to another.</li>\n<li><a href=\"http://is.gd/woothemescwc\">WooThemes</a>: very popular premium theme seller. High quality design and code.</li>\n<li><a href=\"http://is.gd/wpzoom\">WP Zoom</a>: High quality design, solid code, great support. Provide some free themes as well.</li>\n<li><a href=\"http://is.gd/elegantthemescwc\">Elegant Themes</a>: Beautiful themes, well coded. Pay once and get access to more than 80 themes.</li>\n<li><a href=\"http://is.gd/themify\">Themify</a>: Affordable themes with great design and quality.</li>\n</ul>\n<h2>Tutorials sites and blogs</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/digwp.png\" alt=\"\" /><br />\nWhen developing WordPress themes or plugins, you often need to refer to quality tutorials in order to learn new things or consolidate your knowledge. Below is my personal selection of interesting tutorial sites and blogs.</p>\n<ul>\n<li><a href=\"http://wp.tutsplus.com/\">WP Tuts+</a>: New articles almost everyday, always interesting.</li>\n<li><a href=\"http://wp.smashingmagazine.com/\">Smashing Magazine</a>: The popular design blog have some very in-depth tutorials and articles about WP.</li>\n<li><a href=\"http://digwp.com\">Digging into WordPress</a>: One of my favorites WordPress tutorials blog. Authored by Jeff Starr and Chris Coyier.</li>\n<li><a href=\"http://wpengineer.com/\">WP Engineer</a>: Lots of coding tutorials, tip and tricks. A must read for WordPress enthusiasts.</li>\n<li><a href=\"http://wpmu.org/\">WPMU</a>: A multi-author site, with lots of new content every week.</li>\n</ul>\n<p>I guess most of you know that here at CatsWhoCode, I often write lots of useful posts about WordPress, so don&#8217;t forget to bookmark the site if you haven&#8217;t done already!</p>\n<h2>Code snippets</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/wpsnippets.png\" alt=\"\" /><br />\nSeveral websites and blogs are offering ready to use WordPress code snippets. Super useful when you need to achieve a particular task.</p>\n<ul>\n<li><a href=\"http://www.wprecipes.com/\">WPRecipes</a>: Another site of mine, online since 2008, with over 450 WordPress code snippets, hacks and tricks.</li>\n<li><a href=\"http://css-tricks.com/snippets/wordpress/\">CSS-Tricks snippets</a>: Quality code snippets repository.</li>\n<li><a href=\"http://www.wpmayor.com/\">WP Mayor</a>: Several interesting code snippets.</li>\n<li><a href=\"http://wp-snippets.com/\">WP Snippets</a>: One of my favorite online place when I&#8217;m looking for a hack or snippet.</li>\n<li><a href=\"http://snipplr.com/all/tags/wordpress/\">Snipplr</a>: Lots of user-submitted code snippets.</li>\n</ul>\n<h2>WordPress News</h2>\n<p><img src=\"http://www.catswhocode.com/blog/wp-content/uploads/2013/03/wpcandy.png\" alt=\"\" /></p>\n<ul>\n<li><a href=\"http://wordpress.org/news/\">WordPress.org News</a>: Indeed, the first place to have a look at when looking for WordPress news is the official site.</li>\n<li><a href=\"http://wpcandy.com/\">WP Candy</a>: Popular WordPress site with tons of fresh news.</li>\n<li><a href=\"http://weblogtoolscollection.com/\">Weblog Tolls Collection</a>: One of the oldest blogs about WordPress.</li>\n<li><a href=\"http://www.wptopics.com/\">WPTopics</a>: A news site which aggregate news from lots of interesting blogs.</li>\n</ul>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/GU0PpOhjses\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/ultimate-list-of-wordpress-resources','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(8,1,'HTML5 code snippets to take your website to the next level','<h2>Url and email input types</h2>\n<p>HTML5 introduced new input types <code>url</code> and <code>email</code> are one of those. They allow you to write a more semantically correct code and make the form completion easier on mobile devices, by displaying special buttons (like the @ or .com buttons) depending on the input type.</p>\n<p>Here is the <code>url</code> attribute in action:</p>\n<pre>&lt;input type=&quot;url&quot; value=&quot;&quot;&gt;</pre>\n<p>And the <code>email</code> attribute as well. Please also pay attention to the <code>pattern</code> attribute as I will explain it below. </p>\n<pre>&lt;input type=&quot;email&quot; pattern=&quot;[^ @]*@[^ @]*&quot; value=&quot;&quot;&gt;</pre>\n<p><strong>Source: <a href=\"http://davidwalsh.name/html5-email\">http://davidwalsh.name/html5-email</a></strong></p>\n<h2>Regexp patterns for form validation</h2>\n<p>Before HTML5, when you used a form on your website, you had to use JavaScript to create a front-side validation. Now with HTML5 and the <code>pattern</code> attribute, you can define a regular expression pattern to validate the data.</p>\n<p>The following snippet is for validating email addresses:</p>\n<pre>&lt;input type=&quot;text&quot; title=&quot;email&quot; required pattern=&quot;[^@]+@[^@]+\\.[a-zA-Z]{2,6}&quot; /&gt;</pre>\n<p>This one is for strong passwords:</p>\n<pre>&lt;input title=&quot;at least eight symbols containing at least one number, one lower, and one upper letter&quot; type=&quot;text&quot; pattern=&quot;(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}&quot; required /&gt;</pre>\n<p>And this one is for validating phone numbers:</p>\n<pre>&lt;input type=&quot;text&quot; required pattern=&quot;(\\+?\\d[- .]*){7,13}&quot; title=&quot;international, national or local phone number&quot;/&gt;</pre>\n<p><strong>Source: <a href=\"http://blog.staffannoteberg.com/2012/03/01/html5-form-validation-with-regex/\">http://blog.staffannoteberg.com/2012/03/01/html5-form-validation-with-regex/</a></strong></p>\n<h2>Context menus with HTML5</h2>\n<p>HTML5 context menus allows you to add elements to the contextual menu which appears when the user right click somewhere on your page.<br />\nAt the time of writing this article, the <code>contextmenu</code> element is only compatible with Firefox, so let&#8217;s hope other browsers will implement it very soon. </p>\n<pre>\n&lt;section contextmenu=&quot;mymenu&quot;&gt; \n&lt;p&gt;Yes, this section right here&lt;/p&gt;\n&lt;/section&gt;\n\n&lt;menu type=&quot;context&quot; id=&quot;mymenu&quot;&gt;\n  &lt;menuitem label=&quot;Please do not steal our images&quot; icon=&quot;img/forbidden.png&quot;&gt;&lt;/menuitem&gt;\n  &lt;menu label=&quot;Social Networks&quot;&gt;\n  &lt;menuitem label=&quot;Share on Facebook&quot; onclick=&quot;window.location.href = &#39;http://facebook.com/sharer/sharer.php?u=&#39; + window.location.href;&quot;&gt;   &lt;/menuitem&gt;\n  &lt;/menu&gt;\n&lt;/menu&gt;\n</pre>\n<p><strong>Source/Demo: <a href=\"http://speckyboy.com/2013/02/13/quick-tip-the-html5-context-menu-attribute-2/\">http://speckyboy.com/2013/02/13/quick-tip-the-html5&#8230;</a></strong></p>\n<h2>HTML5 video, with Flash fallback</h2>\n<p>One of the greatest new possibilities of HTML5 is definitely its ability to play video files without requesting the use of Flash. Though, as older browsers are not compatible with HTML5 videos, you should implement a Flash fallback. The following example show how to embed <code>mp4</code> and <code>ogv</code> videos in HTML5, with a Flash fallback for older browsers.</p>\n<pre>\n&lt;video width=&quot;640&quot; height=&quot;360&quot; controls&gt;\n	&lt;source src=&quot;__VIDEO__.MP4&quot;  type=&quot;video/mp4&quot; /&gt;\n	&lt;source src=&quot;__VIDEO__.OGV&quot;  type=&quot;video/ogg&quot; /&gt;\n	&lt;object width=&quot;640&quot; height=&quot;360&quot; type=&quot;application/x-shockwave-flash&quot; data=&quot;__FLASH__.SWF&quot;&gt;\n		&lt;param name=&quot;movie&quot; value=&quot;__FLASH__.SWF&quot; /&gt;\n		&lt;param name=&quot;flashvars&quot; value=&quot;controlbar=over&amp;amp;image=__POSTER__.JPG&amp;amp;file=__VIDEO__.MP4&quot; /&gt;\n		&lt;img src=&quot;__VIDEO__.JPG&quot; width=&quot;640&quot; height=&quot;360&quot; alt=&quot;__TITLE__&quot;\n		     title=&quot;No video playback capabilities, please download the video below&quot; /&gt;\n	&lt;/object&gt;\n&lt;/video&gt;\n</pre>\n<p><strong>Source: <a href=\"http://camendesign.com/code/video_for_everybody\">http://camendesign.com/code/video_for_everybody</a></strong></p>\n<h2>Autocompletion with HTML5 datalists</h2>\n<p>Using the <code>datalist</code> element, HTML5 allows you to create a list of data to autocomplete an input field. Super useful!</p>\n<pre>\n&lt;input name=&quot;frameworks&quot; list=&quot;frameworks&quot; /&gt;\n\n&lt;datalist id=&quot;frameworks&quot;&gt;\n	&lt;option value=&quot;MooTools&quot;&gt;\n	&lt;option value=&quot;Moobile&quot;&gt;\n	&lt;option value=&quot;Dojo Toolkit&quot;&gt;\n	&lt;option value=&quot;jQuery&quot;&gt;\n	&lt;option value=&quot;YUI&quot;&gt;\n&lt;/datalist&gt;\n</pre>\n<p><strong>Source/Demo: <a href=\"http://davidwalsh.name/datalist\">http://davidwalsh.name/datalist</a></strong></p>\n<h2>Hidden elements using HTML5</h2>\n<p>HTML5 introduce the <code>hidden</code> attribute, which allow you to hide a specific element, as you would do it in CSS using <code>display:none</code>.</p>\n<pre>\n&lt;p hidden&gt;You can&#39;t see this text&lt;/p&gt;\n</pre>\n<p><strong>Source: <a href=\"http://html5demos.com/hidden\">http://html5demos.com/hidden</a></strong></p>\n<h2>element with autofocus</h2>\n<p>The <code>autofocus</code> attribute allow you to force the focus on a specific element. Useful for search pages such as google.com homepage.</p>\n<pre>\n&lt;input autofocus=&quot;autofocus&quot; /&gt;\n</pre>\n<p><strong>Source: <a href=\"http://davidwalsh.name/autofocus\">http://davidwalsh.name/autofocus</a></strong></p>\n<h2>HTML5 prefetching</h2>\n<p>Some time ago I wrote <a href=\"http://www.catswhocode.com/blog/mastering-html5-prefetching\">a detailed article</a> about HTML5 prefetching. Basically, prefetching is a simple technique to prefetch and load a resource which is not included in the current page.</p>\n<p>The example below shows the prefetching of an image:</p>\n<pre>\n&lt;link rel=&quot;prefetch&quot; href=&quot;http://www.catswhocode.com/wp-content/uploads/my_image.png&quot;&gt;\n</pre>\n<p><strong>Source: <a href=\"http://www.catswhocode.com/blog/mastering-html5-prefetching\">http://www.catswhocode.com/blog/mastering-html5-prefetching</a></strong></p>\n<h2>Playing audio files with HTML5</h2>\n<p>HTML5 can play videos as I shown you before, and of course it can also play audio files such as the popular <code>mp3</code> format. As an example, here is a minimalist but functional audio player. </p>\n<pre>\n&lt;audio id=&quot;player&quot; src=&quot;sound.mp3&quot;&gt;&lt;/audio&gt;\n&lt;div&gt;\n	&lt;button onclick=&quot;document.getElementById(&#39;player&#39;).play()&quot;&gt;Play&lt;/button&gt;\n	&lt;button onclick=&quot;document.getElementById(&#39;player&#39;).pause()&quot;&gt;Pause&lt;/button&gt;\n	&lt;button onclick=&quot;document.getElementById(&#39;player&#39;).volume+=0.1&quot;&gt;Volume Up&lt;/button&gt;\n	&lt;button onclick=&quot;document.getElementById(&#39;player&#39;).volume-=0.1&quot;&gt;Volume Down&lt;/button&gt;\n&lt;/div&gt; \n</pre>\n<p><strong>Source: <a href=\"http://www.catswhocode.com/blog/mastering-the-html5-audio-property\">http://www.catswhocode.com/blog/mastering-the-html5-audio-property</a></strong></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/7Wm4E1aPU6Y\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/html5-code-snippets-to-take-your-website-to-the-next-level','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(9,1,'WordPress snippets, hacks and tips to enhance your comments section','<h2>Allow more HTML tags in WordPress comments</h2>\n<p>By default, WordPress allow commenters to use some HTML tags in the comment textarea. But depending on your blog, you might want to allow the use of more tags. </p>\n<p>To do so, simply paste the code below into your <code>functions.php</code> file. The list of allowed tags can be modified on line 4.</p>\n<pre>\n// Create function which allows more tags within comments\nfunction allow_pres() {\n  global $allowedtags;\n  $allowedtags[&#39;pre&#39;] = array(&#39;class&#39;=&gt;array());\n}\n\n// Add WordPress hook to use the function\nadd_action(&#39;comment_post&#39;, &#39;allow_pres&#39;);\n</pre>\n<p><strong>&raquo; Source: <a href=\"http://davidwalsh.name/wordpress-comment-tags\">http://davidwalsh.name/wordpress-comment-tags</a></strong></p>\n<h2>Remove autolinks in comments</h2>\n<p>When a commenter paste a url link into the comment form, WordPress automatically transform it into a hypertext link. This is good on most cases, but personally I do not like this as many people used my blog comments to advertise their own products and services.</p>\n<p>Removing autolinks in comments is super easy: Just insert the line of code below into your <code>functions.php</code> file.</p>\n<pre>\nremove_filter(\'comment_text\', \'make_clickable\', 9);\n</pre>\n<p><strong>&raquo; Source: <a href=\"http://www.wprecipes.com/wordpress-hack-remove-autolinks-in-comments\">http://www.wprecipes.com/wordpress-hack-remove-autolinks-in-comments</a></strong></p>\n<h2>Remove the url field from WordPress comments form</h2>\n<p>If you don&#8217;t want your commenters to be able to enter their website url, here is a snippet to remove the url field from WordPress comment form. </p>\n<p>Simple paste the code below in your <code>functions.php</code> file, save it, and you&#8217;re done.</p>\n<pre>\nfunction remove_comment_fields($fields) {\n    unset($fields[&#39;url&#39;]);\n    return $fields;\n}\nadd_filter(&#39;comment_form_default_fields&#39;,&#39;remove_comment_fields&#39;);\n</pre>\n<p><strong>&raquo; Source: <a href=\"http://wp.tutsplus.com/tutorials/creative-coding/customizing-comments-in-wordpress-functionality-and-appearance/\">http://wp.tutsplus.com/tutorials/creative-coding/customizing-comments&#8230;</a></strong></p>\n<h2>Add more fields to the comments form</h2>\n<p>I just shown you how to remove a field from the comment form, but now, what if you want to add a new field to the form? The following example will add a new field for the commenter to add his age.</p>\n<p>Let&#8217;s start by adding the field. To do this, copy the code below and paste it in your <code>functions.php</code> file:</p>\n<pre>\nfunction add_comment_fields($fields) {\n \n    $fields[&#39;age&#39;] = &#39;&lt;p class=&quot;comment-form-age&quot;&gt;&lt;label for=&quot;age&quot;&gt;&#39; . __( &#39;Age&#39; ) . &#39;&lt;/label&gt;&#39; .\n        &#39;&lt;input id=&quot;age&quot; name=&quot;age&quot; type=&quot;text&quot; size=&quot;30&quot; /&gt;&lt;/p&gt;&#39;;\n    return $fields;\n \n}\nadd_filter(&#39;comment_form_default_fields&#39;,&#39;add_comment_fields&#39;);\n\nfunction add_comment_meta_values($comment_id) {\n \n    if(isset($_POST[&#39;age&#39;])) {\n        $age = wp_filter_nohtml_kses($_POST[&#39;age&#39;]);\n        add_comment_meta($comment_id, &#39;age&#39;, $age, false);\n    }\n \n}\nadd_action (&#39;comment_post&#39;, &#39;add_comment_meta_values&#39;, 1);\n</pre>\n<p>Now, to display the age of the commenter, use the following code:</p>\n<pre>&lt;?php echo &quot;Comment authors age: &quot;.get_comment_meta( $comment-&gt;comment_ID, &#39;age&#39;, true ); ?&gt;</pre>\n<p><strong>&raquo; Source: <a href=\"http://wp.tutsplus.com/tutorials/creative-coding/customizing-comments-in-wordpress-functionality-and-appearance/\">http://wp.tutsplus.com/tutorials/creative-coding/customizing-comments&#8230;</a></strong></p>\n<h2>Insert comments programatically</h2>\n<p>On some specific cases, you might want to insert comments programmatically. Doing so is definitely easy, as shown below. Simply execute this code and it will add a new comment in your database.</p>\n<pre>\n$data = array(\n	&#39;comment_post_ID&#39; =&gt; 1,\n	&#39;comment_author&#39; =&gt; &#39;admin&#39;,\n	&#39;comment_author_email&#39; =&gt; &#39;admin@admin.com&#39;,\n	&#39;comment_author_url&#39; =&gt; &#39;http://www.catswhocode.com&#39;,\n	&#39;comment_content&#39; =&gt; &#39;Lorem ipsum dolor sit amet...&#39;,\n	&#39;comment_author_IP&#39; =&gt; &#39;127.0.0.1&#39;,\n	&#39;comment_agent&#39; =&gt; &#39;Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; fr; rv:1.9.2.3) Gecko/20100401 Firefox/3.6.3&#39;,\n	&#39;comment_date&#39; =&gt; date(&#39;Y-m-d H:i:s&#39;),\n	&#39;comment_date_gmt&#39; =&gt; date(&#39;Y-m-d H:i:s&#39;),\n	&#39;comment_approved&#39; =&gt; 1,\n);\n\n$comment_id = wp_insert_comment($data);\n</pre>\n<p><strong>&raquo; Source: <a href=\"http://www.wprecipes.com/wordpress-hack-insert-comments-programatically\">http://www.wprecipes.com/wordpress-hack-insert-comments-programatically</a></strong></p>\n<h2>Automatically disable commenting on posts older than X days</h2>\n<p>If your blog is very popular, you probably receive lots of comments, some on very old posts&#8230; So why not automatically disable commenting on posts older than X days?</p>\n<p>Paste the code below in your <code>functions.php</code> file. The code will disable comments on post older than 30 days. The amount of days can be changed on line 3.</p>\n<pre>\nfunction close_comments( $posts ) {\n	if ( !is_single() ) { return $posts; }\n	if ( time() - strtotime( $posts[0]-&gt;post_date_gmt ) &gt; ( 30 * 24 * 60 * 60 ) ) {\n		$posts[0]-&gt;comment_status = &#39;closed&#39;;\n		$posts[0]-&gt;ping_status    = &#39;closed&#39;;\n	}\n	return $posts;\n}\nadd_filter( &#39;the_posts&#39;, &#39;close_comments&#39; ); \n</pre>\n<p><strong>&raquo; Source: <a href=\"http://perishablepress.com/wordpress-tip-disable-comments-in-old-posts-via-php/\">http://perishablepress.com/wordpress-tip-disable-comments-in-old-posts-via-php/</a></strong></p>\n<h2>Add target=&#8221;blank&#8221; to all links in comment text</h2>\n<p>Using the HTML <code>target=\"blank\"</code> attribute is generally discouraged as this force the opening of a link in a new tab or window, but I know how clients like it. So if you need to add a <code>target=\"blank\"</code> attribute to every links in comments text, just paste the code shown below in your <code>functions.php</code> and you&#8217;ll get the job done. </p>\n<pre>\nfunction autoblank($text) {\n	$return = str_replace(&#39;&lt;a&#39;, &#39;&lt;a target=&quot;_blank&quot;&#39;, $text);\n	return $return;\n}\nadd_filter(&#39;comment_text&#39;, &#39;autoblank&#39;);\n</pre>\n<p><strong>&raquo; Source: <a href=\"http://www.catswhocode.com/blog/snippets/add-target_blank-on-all-link\">http://www.catswhocode.com/blog/snippets/add-target_blank-on-all-link</a></strong></p>\n<h2>Customize comments markup</h2>\n<p>By default, WordPress outputs a standard comments list, but if can be customized if needed. Paste the following code into your <code>functions.php</code> file and customize as desired. </p>\n<pre>\nfunction my_custom_comments($comment, $args, $depth) {\n   $GLOBALS[&#39;comment&#39;] = $comment; ?&gt;\n   &lt;li &lt;?php comment_class(); ?&gt; id=&quot;li-comment-&lt;?php comment_ID() ?&gt;&quot;&gt;\n   &lt;?php if ($comment-&gt;comment_approved == &#39;0&#39;) : ?&gt;\n      &lt;em&gt;&lt;?php _e(&#39;Your comment is awaiting moderation.&#39;) ?&gt;&lt;/em&gt;\n   &lt;?php endif; ?&gt;\n\n   // Comments markup code here, e.g. functions like comment_text(); \n\n}\n</pre>\n<p>Once done, use the following line of code in <code>comments.php</code> to display your custom comment markup: </p>\n<pre>\n&lt;?php wp_list_comments(&quot;callback=my_custom_comments&quot;); ?&gt;\n</pre>\n<p><strong>&raquo; Source: <a href=\"http://css-tricks.com/snippets/wordpress/customize-comments-markup/\">http://css-tricks.com/snippets/wordpress/customize-comments-markup/</a></strong></p>\n<h2>Disable comments feeds in individual posts</h2>\n<p>By default, WordPress create RSS feeds for all individual posts. If you don&#8217;t want or need them, you can disable them with the following code snippet. Simply paste it in your <code>functions.php</code> file and you&#8217;ll get rid of individual post feeds.</p>\n<pre>\n// disable comment feeds for individual posts\nfunction disablePostCommentsFeedLink($for_comments) {\n	return;\n}\nadd_filter(&#39;post_comments_feed_link&#39;,&#39;disablePostCommentsFeedLink&#39;);\n</pre>\n<p><strong>&raquo; Source: <a href=\"http://digwp.com/2009/11/disable-comment-feeds-individual-posts/\">http://digwp.com/2009/11/disable-comment-feeds-individual-posts/</a></strong></p>\n<p><em>Want more WordPress tips and snippets? Then have a look to <a href=\"http://www.wprecipes.com\">WPRecipes</a>, another blog of mine!</em></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/iG9R-7I6k3o\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/wordpress-snippets-hacks-and-tips-to-enhance-your-comments-section','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL),
	(10,1,'Modern CSS3 techniques to embellish your website','<h2>Black and white images using CSS3</h2>\n<p>The following CSS class will display any color image in black and white. The vendor prefix allows the trick to work on any browser.</p>\n<pre>\nimg.desaturate { \n    filter: grayscale(100%);\n    -webkit-filter: grayscale(100%);\n    -moz-filter: grayscale(100%);\n    -ms-filter: grayscale(100%);\n    -o-filter: grayscale(100%);\n}\n</pre>\n<p><strong>Source/Demo: <a href=\"http://demosthenes.info/blog/532/Convert-Images-To-Black--White-With-CSS\">http://demosthenes.info/blog/532/Convert-Images-To-Black&#8211;White-With-CSS</a></strong></p>\n<h2>Page top shadow in CSS3</h2>\n<p>Here is a simple snippet to give your website a nice page top shadow. Easy to apply and visually pleasant!</p>\n<pre>\nbody:before {\n          content: \"\";\n          position: fixed;\n          top: -10px;\n          left: 0;\n          width: 100%;\n          height: 10px;\n\n          -webkit-box-shadow: 0px 0px 10px rgba(0,0,0,.8);\n          -moz-box-shadow: 0px 0px 10px rgba(0,0,0,.8);\n          box-shadow: 0px 0px 10px rgba(0,0,0,.8);\n\n          z-index: 100;\n}\n</pre>\n<p><strong>Source/Demo: <a href=\"http://playground.genelocklin.com/depth/\">http://playground.genelocklin.com/depth/</a></strong></p>\n<h2>Detecting double-clicks in CSS3</h2>\n<p>Believe it or not, it&#8217;s possible to detect when an element has been double-clicked by using just CSS, as demonstrated in the following code:</p>\n<pre>\n&lt;div class=&quot;test3&quot;&gt;\n  &lt;span&gt;&lt;input type=&quot;text&quot; value=&quot;&amp;nbsp;&quot; readonly=&quot;true&quot; /&gt;\n  &lt;a href=&quot;http://google.com&quot;&gt;Double click me&lt;/a&gt;&lt;/span&gt;\n&lt;/div&gt;\n\n&lt;style type=&quot;text/css&quot;&gt;\n.test3 span {\n	position: relative;\n}\n.test3 span a { \n	position: relative;\n	z-index: 2; \n}\n.test3 span a:hover, .test3 span a:active { \n	z-index: 4; \n}\n.test3 span input { \n	background: transparent; \n	border: 0; \n	cursor: pointer; \n	position: absolute; \n	top: -1px; \n	left: 0; \n	width: 101%;  /* Hacky */\n	height: 301%; /* Hacky */\n	z-index: 3; \n}\n.test3 span input:focus { \n	background: transparent; \n	border: 0; \n	z-index: 1; \n}\n&lt;/style&gt;\n</pre>\n<p><strong>Source/Demo: <a href=\"http://css-tricks.com/examples/CSSDoubleClick/\">http://css-tricks.com/examples/CSSDoubleClick/</a></strong></p>\n<h2>Triangles in CSS3</h2>\n<p>Yes, it&#8217;s actually possible to draw triangles using only CSS. Although it&#8217;s probably not the best way of doing it, I still find this technique pretty useful and interesting.</p>\n<pre>\n/* create an arrow that points up */\ndiv.arrow-up {\n  width:0px; \n  height:0px; \n  border-left:5px solid transparent;  /* left arrow slant */\n  border-right:5px solid transparent; /* right arrow slant */\n  border-bottom:5px solid #2f2f2f; /* bottom, add background color here */\n  font-size:0px;\n  line-height:0px;\n}\n\n/* create an arrow that points down */\ndiv.arrow-down {\n  width:0px; \n  height:0px; \n  border-left:5px solid transparent;\n  border-right:5px solid transparent;\n  border-top:5px solid #2f2f2f;\n  font-size:0px;\n  line-height:0px;\n}\n\n/* create an arrow that points left */\ndiv.arrow-left {\n  width:0px; \n  height:0px; \n  border-bottom:5px solid transparent;  /* left arrow slant */\n  border-top:5px solid transparent; /* right arrow slant */\n  border-right:5px solid #2f2f2f; /* bottom, add background color here */\n  font-size:0px;\n  line-height:0px;\n}\n\n/* create an arrow that points right */\ndiv.arrow-right {\n  width:0px; \n  height:0px; \n  border-bottom:5px solid transparent;  /* left arrow slant */\n  border-top:5px solid transparent; /* right arrow slant */\n  border-left:5px solid #2f2f2f; /* bottom, add background color here */\n  font-size:0px;\n  line-height:0px;\n}\n</pre>\n<p><strong>Source/Demo: <a href=\"http://davidwalsh.name/css-triangles\">http://davidwalsh.name/css-triangles</a></strong></p>\n<h2>Using CSS calc()</h2>\n<p><code>calc()</code> works like a function and allow you to perform calculations to determine the size and shape of objects. It can be used anywhere a length is required.</p>\n<pre>\n/* basic calc */\n.simpleBlock {\n  width: calc(100% - 100px);\n}\n\n/* calc in calc */\n.complexBlock {\n  width: calc(100% - 50% / 3);\n  padding: 5px calc(3% - 2px);\n  margin-left: calc(10% + 10px);\n}\n</pre>\n<p><strong>Source/Demo: <a href=\"http://davidwalsh.name/css-calc\">http://davidwalsh.name/css-calc</a></strong></p>\n<h2>Pure CSS text gradients</h2>\n<p>Text gradients have always been popular on the internet. Now with CSS3, it&#8217;s a lot easier to create beautiful gradients in a matter of minutes.</p>\n<pre>\nh2[data-text] {\n	position: relative;\n}\nh2[data-text]::after {\n	content: attr(data-text);\n	z-index: 10;\n	color: #e3e3e3;\n	position: absolute;\n	top: 0;\n	left: 0;\n	-webkit-mask-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0,0,0,0)), color-stop(50%, rgba(0,0,0,1)), to(rgba(0,0,0,0)));\n</pre>\n<p><strong>Source: <a href=\"http://snipplr.com/view/49911/pure-css-text-gradients/\">http://snipplr.com/view/49911/pure-css-text-gradients/</a></strong></p>\n<h2>Disabling pointer events with CSS</h2>\n<p>The newly introduced <code>pointer-events</code> property allow you to deactivate pointer events on an element. For example, a link with the following class will not be clickable anymore. </p>\n<pre>\n.disabled { pointer-events: none; }\n</pre>\n<p><strong>Source/Demo: <a href=\"http://davidwalsh.name/pointer-events\">http://davidwalsh.name/pointer-events</a></strong></p>\n<h2>Stiched elements in CSS3</h2>\n<p>The following code snippet shows how to create a nice stitched look around any element. Nice!</p>\n<pre>\np {\n	padding: 5px 10px;\n	margin: 10px;\n	background: #ff0030;\n	color: #fff;\n	font-size: 21px;\n	line-height: 1.3em;\n	border: 2px dashed #fff;\n	border-radius: 3px;\n	-moz-border-radius: 3px;\n	-webkit-border-radius: 3px;\n	-moz-box-shadow: 0 0 0 4px #ff0030, 2px 1px 4px 4px rgba(10,10,0,.5);\n	-webkit-box-shadow: 0 0 0 4px #ff0030, 2px 1px 4px 4px rgba(10,10,0,.5);\n	box-shadow: 0 0 0 4px #ff0030, 2px 1px 6px 4px rgba(10,10,0,.5);\n	text-shadow: -1px -1px #aa3030;\n}\n</pre>\n<p><strong>Source: <a href=\"http://www.catswhocode.com/blog/snippets/stitched-elements-in-css3\">http://www.catswhocode.com/blog/snippets/stitched-elements-in-css3</a></strong></p>\n<h2>Custom scrollbars with CSS3 and WebKit</h2>\n<p>Remember 10 years ago where almost anyone used Microsoft exclusive properties to customize the look of scrollbars? Well, now you can do the same with Webkit.  </p>\n<pre>\n::-webkit-scrollbar {\n  width: 12px;\n}\n\n::-webkit-scrollbar-track {\n  background: none;\n}\n\n::-webkit-scrollbar-thumb {\n  background: -webkit-linear-gradient(left, #547c90, #002640);\n  border: 1px solid #333;\n  box-shadow: inset 1px 0 0 rgba(255, 255, 255, 0.4);\n}\n</pre>\n<p><strong>Source/Demo: <a href=\"http://davidwalsh.name/custom-scrollbars\">http://davidwalsh.name/custom-scrollbars</a></strong></p>\n<h2>Blurry text with CSS3</h2>\n<p>A simple but very nice text blur effect. Easy and good-looking!</p>\n<pre>\n.blur {\n   color: transparent;\n   text-shadow: 0 0 5px rgba(0,0,0,0.5);\n}\n</pre>\n<p><strong>Source/Demo: <a href=\"http://css-tricks.com/snippets/css/blurry-text/\">http://css-tricks.com/snippets/css/blurry-text/</a></strong></p>\n<h2>Pure CSS corner ribbon</h2>\n<p>This code is a bit long, but it creates a fancy corner ribbon in pure CSS. </p>\n<pre>\n&lt;div class=&quot;wrapper&quot;&gt;\n       &lt;div class=&quot;ribbon-wrapper-green&quot;&gt;&lt;div class=&quot;ribbon-green&quot;&gt;NEWS&lt;/div&gt;&lt;/div&gt;\n&lt;/div&gt;\n</pre>\n<p>And the CSS:</p>\n<pre>\n.wrapper {\n  margin: 50px auto;\n  width: 280px;\n  height: 370px;\n  background: white;\n  border-radius: 10px;\n  -webkit-box-shadow: 0px 0px 8px rgba(0,0,0,0.3);\n  -moz-box-shadow:    0px 0px 8px rgba(0,0,0,0.3);\n  box-shadow:         0px 0px 8px rgba(0,0,0,0.3);\n  position: relative;\n  z-index: 90;\n}\n\n.ribbon-wrapper-green {\n  width: 85px;\n  height: 88px;\n  overflow: hidden;\n  position: absolute;\n  top: -3px;\n  right: -3px;\n}\n\n.ribbon-green {\n  font: bold 15px Sans-Serif;\n  color: #333;\n  text-align: center;\n  text-shadow: rgba(255,255,255,0.5) 0px 1px 0px;\n  -webkit-transform: rotate(45deg);\n  -moz-transform:    rotate(45deg);\n  -ms-transform:     rotate(45deg);\n  -o-transform:      rotate(45deg);\n  position: relative;\n  padding: 7px 0;\n  left: -5px;\n  top: 15px;\n  width: 120px;\n  background-color: #BFDC7A;\n  background-image: -webkit-gradient(linear, left top, left bottom, from(#BFDC7A), to(#8EBF45)); \n  background-image: -webkit-linear-gradient(top, #BFDC7A, #8EBF45); \n  background-image:    -moz-linear-gradient(top, #BFDC7A, #8EBF45); \n  background-image:     -ms-linear-gradient(top, #BFDC7A, #8EBF45); \n  background-image:      -o-linear-gradient(top, #BFDC7A, #8EBF45); \n  color: #6a6340;\n  -webkit-box-shadow: 0px 0px 3px rgba(0,0,0,0.3);\n  -moz-box-shadow:    0px 0px 3px rgba(0,0,0,0.3);\n  box-shadow:         0px 0px 3px rgba(0,0,0,0.3);\n}\n\n.ribbon-green:before, .ribbon-green:after {\n  content: &quot;&quot;;\n  border-top:   3px solid #6e8900;   \n  border-left:  3px solid transparent;\n  border-right: 3px solid transparent;\n  position:absolute;\n  bottom: -3px;\n}\n\n.ribbon-green:before {\n  left: 0;\n}\n.ribbon-green:after {\n  right: 0;\n}\n</pre>\n<p><strong>Source/Demo: <a href=\"http://jsfiddle.net/chriscoyier/H6rQ6/1/\">http://jsfiddle.net/chriscoyier/H6rQ6/1/</a></strong></p>\n<img src=\"http://feeds.feedburner.com/~r/Catswhocode/~4/DB2ZQ8nHmiU\" height=\"1\" width=\"1\"/>','http://www.catswhocode.com/blog/modern-css3-techniques-to-embellish-your-website','Jean-Baptiste Jung','2013-06-01 22:31:10',NULL);

/*!40000 ALTER TABLE `user_feed_articles` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table user_feeds
# ------------------------------------------------------------

DROP TABLE IF EXISTS `user_feeds`;

CREATE TABLE `user_feeds` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned DEFAULT NULL,
  `url` varchar(2048) DEFAULT NULL,
  `title` varchar(512) DEFAULT NULL,
  `icon` varchar(2048) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `user_feeds` WRITE;
/*!40000 ALTER TABLE `user_feeds` DISABLE KEYS */;

INSERT INTO `user_feeds` (`id`, `user_id`, `url`, `title`, `icon`, `created_at`, `updated_at`)
VALUES
	(1,1,'http://feeds2.feedburner.com/Catswhocode','CatsWhoCode.com','http://www.catswhocode.com/blog/wp-content/themes/cat-stellation/images/favicon.png','2013-06-01 22:23:08','2013-06-01 22:31:10');

/*!40000 ALTER TABLE `user_feeds` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table user_images
# ------------------------------------------------------------

DROP TABLE IF EXISTS `user_images`;

CREATE TABLE `user_images` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned DEFAULT NULL,
  `filename` varchar(44) DEFAULT '',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `user_images` WRITE;
/*!40000 ALTER TABLE `user_images` DISABLE KEYS */;

INSERT INTO `user_images` (`id`, `user_id`, `filename`, `created_at`, `updated_at`)
VALUES
	(1,1,'727f0c18ca77f17bc07bd717bafee686d3f361ad.png','2013-04-27 20:53:15',NULL),
	(2,1,'552815688f9d8ed90b3c40fbc19408dcf6ee4c60.png','2013-06-01 22:22:43',NULL),
	(4,4,'63c5370063d86b049046d18e89d8f6e37da39ba9.png','2013-06-01 22:35:30',NULL);

/*!40000 ALTER TABLE `user_images` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table user_links
# ------------------------------------------------------------

DROP TABLE IF EXISTS `user_links`;

CREATE TABLE `user_links` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned DEFAULT NULL,
  `url` varchar(2048) DEFAULT NULL,
  `title` varchar(512) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `user_links` WRITE;
/*!40000 ALTER TABLE `user_links` DISABLE KEYS */;

INSERT INTO `user_links` (`id`, `user_id`, `url`, `title`, `created_at`, `updated_at`)
VALUES
	(1,1,'http://www.google.es','Google','2013-04-27 20:53:44',NULL),
	(2,1,'http://www.google.es','Google','2013-06-01 22:22:55',NULL);

/*!40000 ALTER TABLE `user_links` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table user_statuses
# ------------------------------------------------------------

DROP TABLE IF EXISTS `user_statuses`;

CREATE TABLE `user_statuses` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(11) unsigned DEFAULT NULL,
  `status` text,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_user_id` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `user_statuses` WRITE;
/*!40000 ALTER TABLE `user_statuses` DISABLE KEYS */;

INSERT INTO `user_statuses` (`id`, `user_id`, `status`, `created_at`, `updated_at`)
VALUES
	(1,1,'Test','2013-04-27 20:52:59',NULL),
	(2,1,'lorem','2013-06-01 22:20:03',NULL),
	(3,1,'Lorem 2','2013-06-01 22:22:25',NULL),
	(4,4,'Great!','2013-06-01 22:35:43',NULL);

/*!40000 ALTER TABLE `user_statuses` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table users
# ------------------------------------------------------------

DROP TABLE IF EXISTS `users`;

CREATE TABLE `users` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(50) DEFAULT NULL,
  `email` varchar(254) DEFAULT NULL,
  `password` binary(60) DEFAULT NULL,
  `avatar_id` int(11) unsigned DEFAULT NULL,
  `name` varchar(25) DEFAULT NULL,
  `surname` varchar(50) DEFAULT NULL,
  `bio` tinytext,
  `location` tinytext,
  `gender` tinyint(1) unsigned DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;

INSERT INTO `users` (`id`, `username`, `email`, `password`, `avatar_id`, `name`, `surname`, `bio`, `location`, `gender`, `created_at`, `updated_at`)
VALUES
	(1,'tbhot3ww','hello@christophervalles.com',X'243279243134247078466B61344E4F584B6275363057324445376F754F434E657349796F6F462E49534D694B6D526475796F51315A77494874484E32',1,'Christopher','Valles','Game backend engineer. Entrepreneur. Airsofter. Apple fanboy. ACTC. Cooker. Sysadmin. ACSP. If you want to know more just ask!','London, United Kingdom',1,NULL,NULL),
	(4,'esborguergue','esborguergue@gmail.com',X'243279243134244D564E48394F534173714A5742476E6F55755830772E71386A467539693179587375526F354257383132674B6151347A416A37364F',4,'Esborguergue','Ipsum','','',0,'2013-06-01 22:35:29',NULL);

/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;



/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
